
//
// StyleDictionary.swift
//

// Do not edit directly
// Generated on Wed, 25 Aug 2021 17:36:45 GMT


import UIKit

public class StyleDictionary {
    public static let colorDarkmodeBgCard = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.15) /* Card background color */
    public static let colorDarkmodeBgDark = UIColor(red: 0.106, green: 0.039, blue: 0.161, alpha: 1) /* Main body section option */
    public static let colorDarkmodeBgFooter = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1) /* Footer Color */
    public static let colorDarkmodeBgForm = UIColor(red: 0.945, green: 0.953, blue: 0.957, alpha: 1) /* Form background color */
    public static let colorDarkmodeBgGray = UIColor(red: 0.133, green: 0.110, blue: 0.192, alpha: 1) /* Main body sections */
    public static let colorDarkmodeBgNavbar = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1) /* Navbar color */
    public static let colorDarkmodeButtonBg = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Button background color */
    public static let colorDarkmodeButtonText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Primary button text color */
    public static let colorDarkmodeButtonTextUnbounded = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Unbounded button text color */
    public static let colorDarkmodeDataColor1 = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Color 1 */
    public static let colorDarkmodeDataColor2 = UIColor(red: 0.345, green: 0.455, blue: 1.000, alpha: 1) /* Color 2 */
    public static let colorDarkmodeDataColor3 = UIColor(red: 0.000, green: 0.600, blue: 1.000, alpha: 1) /* Color 3 */
    public static let colorDarkmodeDataColor4 = UIColor(red: 0.000, green: 0.702, blue: 1.000, alpha: 1) /* Color 4 */
    public static let colorDarkmodeDataColor5 = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Color 5 */
    public static let colorDarkmodeIconBase = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Base color */
    public static let colorDarkmodeIconHighlight = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Brightest part of icon */
    public static let colorDarkmodeIconSecondary = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Secondary color */
    public static let colorDarkmodeLogoBg = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Logo background color  */
    public static let colorDarkmodeLogoFg = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1) /* Logo foreground color */
    public static let colorDarkmodeLogoText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Color of the word Symbol */
    public static let colorDarkmodeSemanticBad = UIColor(red: 1.000, green: 0.600, blue: 0.600, alpha: 1) /* Warning (bad, stop, halt, error) */
    public static let colorDarkmodeSemanticCaution = UIColor(red: 0.969, green: 0.753, blue: 0.431, alpha: 1) /* Caution (possible error) */
    public static let colorDarkmodeSemanticGood = UIColor(red: 0.702, green: 0.902, blue: 0.702, alpha: 1) /* Good things */
    public static let colorDarkmodeSemanticInfo = UIColor(red: 0.620, green: 0.820, blue: 0.980, alpha: 1) /* Info */
    public static let colorDarkmodeSemanticNeutral = UIColor(red: 0.780, green: 0.808, blue: 0.820, alpha: 1) /* Neutral */
    public static let colorDarkmodeTextBody = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Body text */
    public static let colorDarkmodeTextFooter = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.7) /* Footer text */
    public static let colorDarkmodeTextForm = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1) /* Form text */
    public static let colorDarkmodeTextLearnMore = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Use for buttons that don't have a background box */
    public static let colorDarkmodeTextLearnmoreLarge = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Larger Learn More or buttons without background box */
    public static let colorDarkmodeTextNavbarItems = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Text color for navbar links */
    public static let colorDarkmodeTextSubtitle = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.6) /* Use on subtitles and labels */
    public static let colorDarkmodeTextTitle = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Use on titles */
    public static let colorLightmodeBgFooter = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1) /* Footer Color */
    public static let colorLightmodeBgGray = UIColor(red: 0.949, green: 0.941, blue: 0.957, alpha: 1) /* Option 1 for main body sections */
    public static let colorLightmodeBgLight = UIColor(red: 0.980, green: 0.976, blue: 0.984, alpha: 1) /* Option 2 for main body sections */
    public static let colorLightmodeBgNavbar = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Navbar color */
    public static let colorLightmodeButtonBg = UIColor(red: 0.533, green: 0.000, blue: 0.800, alpha: 1) /* Button background color */
    public static let colorLightmodeButtonText = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1) /* Button foreground color */
    public static let colorLightmodeDataColor1 = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Color 1 */
    public static let colorLightmodeDataColor2 = UIColor(red: 0.345, green: 0.455, blue: 1.000, alpha: 1) /* Color 2 */
    public static let colorLightmodeDataColor3 = UIColor(red: 0.000, green: 0.600, blue: 1.000, alpha: 1) /* Color 3 */
    public static let colorLightmodeDataColor4 = UIColor(red: 0.000, green: 0.702, blue: 1.000, alpha: 1) /* Color 4 */
    public static let colorLightmodeDataColor5 = UIColor(red: 0.153, green: 0.773, blue: 0.953, alpha: 1) /* Color 5 */
    public static let colorLightmodeIconBase = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1) /* Base color */
    public static let colorLightmodeIconHighlight = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Brightest part of icon */
    public static let colorLightmodeIconSecondary = UIColor(red: 0.533, green: 0.000, blue: 0.800, alpha: 1) /* Secondary color */
    public static let colorLightmodeLogoBg = UIColor(red: 0.702, green: 0.165, blue: 0.976, alpha: 1) /* Logo background color  */
    public static let colorLightmodeLogoFg = UIColor(red: 0.302, green: 0.302, blue: 0.302, alpha: 1) /* Logo foreground color */
    public static let colorLightmodeLogoText = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1) /* Color of the word Symbol */
    public static let colorLightmodeSemanticBad = UIColor(red: 0.800, green: 0.000, blue: 0.000, alpha: 1) /* Warning (bad, stop, halt, error) */
    public static let colorLightmodeSemanticCaution = UIColor(red: 1.000, green: 0.600, blue: 0.000, alpha: 1) /* Caution (possible error) */
    public static let colorLightmodeSemanticGood = UIColor(red: 0.157, green: 0.451, blue: 0.149, alpha: 1) /* Good things */
    public static let colorLightmodeSemanticInfo = UIColor(red: 0.251, green: 0.525, blue: 0.749, alpha: 1) /* Information */
    public static let colorLightmodeSemanticNeutral = UIColor(red: 0.361, green: 0.412, blue: 0.439, alpha: 1)
    public static let colorLightmodeTextBody = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1) /* Body text */
    public static let colorLightmodeTextFooter = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1) /* Footer text */
    public static let colorLightmodeTextLearnMore = UIColor(red: 0.533, green: 0.000, blue: 0.800, alpha: 1) /* Use for buttons that don't have a background box */
    public static let colorLightmodeTextLearnmoreLarge = UIColor(red: 0.533, green: 0.000, blue: 0.800, alpha: 1) /* Larger Learn More or buttons without background box */
    public static let colorLightmodeTextNavbarItems = UIColor(red: 0.102, green: 0.102, blue: 0.102, alpha: 1) /* Text color for navbar links */
    public static let colorLightmodeTextSubtitle = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.6) /* Use on subtitles */
    public static let colorLightmodeTextTitle = UIColor(red: 0.533, green: 0.000, blue: 0.800, alpha: 1) /* Title color */
    public static let effectGlowBlueColor = rgba(110, 215, 247, 1)
    public static let effectGlowBlueOffsetX = 0
    public static let effectGlowBlueOffsetY = 0
    public static let effectGlowBlueRadius = 28
    public static let effectGlowBlueSpread = 0
    public static let effectGlowBlueType = dropShadow
    public static let effectGlowFusiaColor = rgba(255, 7, 253, 1)
    public static let effectGlowFusiaOffsetX = 0
    public static let effectGlowFusiaOffsetY = 0
    public static let effectGlowFusiaRadius = 28
    public static let effectGlowFusiaSpread = 0
    public static let effectGlowFusiaType = dropShadow
    public static let effectGlowLargeButtonsColor = rgba(6, 235, 236, 1)
    public static let effectGlowLargeButtonsOffsetX = 0
    public static let effectGlowLargeButtonsOffsetY = 0
    public static let effectGlowLargeButtonsRadius = 12
    public static let effectGlowLargeButtonsSpread = 0
    public static let effectGlowLargeButtonsType = dropShadow
    public static let effectGlowYellowColor = rgba(218, 254, 0, 1)
    public static let effectGlowYellowOffsetX = 0
    public static let effectGlowYellowOffsetY = 0
    public static let effectGlowYellowRadius = 28
    public static let effectGlowYellowSpread = 0
    public static let effectGlowYellowType = dropShadow
    public static let fontBodyBoldFontFamily = "Protipo"
    public static let fontBodyBoldFontSize = "18"
    public static let fontBodyBoldFontStretch = "normal"
    public static let fontBodyBoldFontStyle = "normal"
    public static let fontBodyBoldFontStyleOld = "Bold"
    public static let fontBodyBoldFontWeight = "700"
    public static let fontBodyBoldLetterSpacing = "0"
    public static let fontBodyBoldLineHeight = "150"
    public static let fontBodyBoldParagraphIndent = "0"
    public static let fontBodyBoldParagraphSpacing = "15"
    public static let fontBodyBoldTextCase = "none"
    public static let fontBodyBoldTextDecoration = "none"
    public static let fontBodyFontFamily = "Protipo"
    public static let fontBodyFontSize = "18"
    public static let fontBodyFontStretch = "normal"
    public static let fontBodyFontStyle = "normal"
    public static let fontBodyFontStyleOld = "Regular"
    public static let fontBodyFontWeight = "400"
    public static let fontBodyHeroFontFamily = "Protipo"
    public static let fontBodyHeroFontSize = "20"
    public static let fontBodyHeroFontStretch = "normal"
    public static let fontBodyHeroFontStyle = "normal"
    public static let fontBodyHeroFontStyleOld = "Regular"
    public static let fontBodyHeroFontWeight = "400"
    public static let fontBodyHeroLetterSpacing = "0"
    public static let fontBodyHeroLineHeight = "150"
    public static let fontBodyHeroParagraphIndent = "0"
    public static let fontBodyHeroParagraphSpacing = "17"
    public static let fontBodyHeroTextCase = "none"
    public static let fontBodyHeroTextDecoration = "none"
    public static let fontBodyLetterSpacing = "0"
    public static let fontBodyLineHeight = "150"
    public static let fontBodyParagraphIndent = "0"
    public static let fontBodyParagraphSpacing = "15"
    public static let fontBodySmallFontFamily = "Protipo"
    public static let fontBodySmallFontSize = "15"
    public static let fontBodySmallFontStretch = "normal"
    public static let fontBodySmallFontStyle = "normal"
    public static let fontBodySmallFontStyleOld = "Regular"
    public static let fontBodySmallFontWeight = "400"
    public static let fontBodySmallLetterSpacing = "0"
    public static let fontBodySmallLineHeight = "150"
    public static let fontBodySmallParagraphIndent = "0"
    public static let fontBodySmallParagraphSpacing = "12"
    public static let fontBodySmallTextCase = "none"
    public static let fontBodySmallTextDecoration = "none"
    public static let fontBodyTextCase = "none"
    public static let fontBodyTextDecoration = "none"
    public static let fontButtonBoundedFontFamily = "Roboto"
    public static let fontButtonBoundedFontSize = "20"
    public static let fontButtonBoundedFontStretch = "normal"
    public static let fontButtonBoundedFontStyle = "normal"
    public static let fontButtonBoundedFontStyleOld = "Bold"
    public static let fontButtonBoundedFontWeight = "700"
    public static let fontButtonBoundedLetterSpacing = "2"
    public static let fontButtonBoundedLineHeight = "100"
    public static let fontButtonBoundedParagraphIndent = "0"
    public static let fontButtonBoundedParagraphSpacing = "0"
    public static let fontButtonBoundedTextCase = "uppercase"
    public static let fontButtonBoundedTextDecoration = "none"
    public static let fontButtonUnboundedFontFamily = "Carbon"
    public static let fontButtonUnboundedFontSize = "24"
    public static let fontButtonUnboundedFontStretch = "normal"
    public static let fontButtonUnboundedFontStyle = "normal"
    public static let fontButtonUnboundedFontStyleOld = "Bold"
    public static let fontButtonUnboundedFontWeight = "700"
    public static let fontButtonUnboundedLetterSpacing = "2"
    public static let fontButtonUnboundedLineHeight = "100"
    public static let fontButtonUnboundedParagraphIndent = "0"
    public static let fontButtonUnboundedParagraphSpacing = "0"
    public static let fontButtonUnboundedTextCase = "uppercase"
    public static let fontButtonUnboundedTextDecoration = "none"
    public static let fontCaptionFontFamily = "Carbon"
    public static let fontCaptionFontSize = "18"
    public static let fontCaptionFontStretch = "normal"
    public static let fontCaptionFontStyle = "normal"
    public static let fontCaptionFontStyleOld = "Regular"
    public static let fontCaptionFontWeight = "400"
    public static let fontCaptionLetterSpacing = "0"
    public static let fontCaptionLineHeight = "120"
    public static let fontCaptionParagraphIndent = "0"
    public static let fontCaptionParagraphSpacing = "10"
    public static let fontCaptionTextCase = "none"
    public static let fontCaptionTextDecoration = "none"
    public static let fontH1FontFamily = "Roboto"
    public static let fontH1FontSize = "64"
    public static let fontH1FontStretch = "normal"
    public static let fontH1FontStyle = "normal"
    public static let fontH1FontStyleOld = "Bold"
    public static let fontH1FontWeight = "700"
    public static let fontH1LetterSpacing = "-2"
    public static let fontH1LineHeight = "100"
    public static let fontH1ParagraphIndent = "0"
    public static let fontH1ParagraphSpacing = "0"
    public static let fontH1TextCase = "uppercase"
    public static let fontH1TextDecoration = "none"
    public static let fontH2FontFamily = "Roboto"
    public static let fontH2FontSize = "40"
    public static let fontH2FontStretch = "normal"
    public static let fontH2FontStyle = "normal"
    public static let fontH2FontStyleOld = "Bold"
    public static let fontH2FontWeight = "700"
    public static let fontH2LetterSpacing = "-2"
    public static let fontH2LineHeight = "normal"
    public static let fontH2ParagraphIndent = "0"
    public static let fontH2ParagraphSpacing = "0"
    public static let fontH2TextCase = "uppercase"
    public static let fontH2TextDecoration = "none"
    public static let fontH3FontFamily = "Roboto"
    public static let fontH3FontSize = "24"
    public static let fontH3FontStretch = "normal"
    public static let fontH3FontStyle = "normal"
    public static let fontH3FontStyleOld = "Bold"
    public static let fontH3FontWeight = "700"
    public static let fontH3LetterSpacing = "0"
    public static let fontH3LineHeight = "normal"
    public static let fontH3ParagraphIndent = "0"
    public static let fontH3ParagraphSpacing = "0"
    public static let fontH3TextCase = "uppercase"
    public static let fontH3TextDecoration = "none"
    public static let fontLabelFontFamily = "Carbon"
    public static let fontLabelFontSize = "18"
    public static let fontLabelFontStretch = "normal"
    public static let fontLabelFontStyle = "normal"
    public static let fontLabelFontStyleOld = "Bold"
    public static let fontLabelFontWeight = "700"
    public static let fontLabelLetterSpacing = "0"
    public static let fontLabelLineHeight = "120"
    public static let fontLabelParagraphIndent = "0"
    public static let fontLabelParagraphSpacing = "0"
    public static let fontLabelTextCase = "uppercase"
    public static let fontLabelTextDecoration = "none"
    public static let fontLinkFontFamily = "Protipo"
    public static let fontLinkFontSize = "18"
    public static let fontLinkFontStretch = "normal"
    public static let fontLinkFontStyle = "normal"
    public static let fontLinkFontStyleOld = "Regular"
    public static let fontLinkFontWeight = "400"
    public static let fontLinkLetterSpacing = "0"
    public static let fontLinkLineHeight = "150"
    public static let fontLinkParagraphIndent = "0"
    public static let fontLinkParagraphSpacing = "15"
    public static let fontLinkTextCase = "none"
    public static let fontLinkTextDecoration = "none"
    public static let fontSubtitleFontFamily = "Roboto"
    public static let fontSubtitleFontSize = "24"
    public static let fontSubtitleFontStretch = "normal"
    public static let fontSubtitleFontStyle = "normal"
    public static let fontSubtitleFontStyleOld = "Medium"
    public static let fontSubtitleFontWeight = "500"
    public static let fontSubtitleLetterSpacing = "0"
    public static let fontSubtitleLineHeight = "normal"
    public static let fontSubtitleParagraphIndent = "0"
    public static let fontSubtitleParagraphSpacing = "0"
    public static let fontSubtitleTextCase = "uppercase"
    public static let fontSubtitleTextDecoration = "none"
    public static let fontTitleSuperFontFamily = "Roboto"
    public static let fontTitleSuperFontSize = "108"
    public static let fontTitleSuperFontStretch = "normal"
    public static let fontTitleSuperFontStyle = "normal"
    public static let fontTitleSuperFontStyleOld = "Bold"
    public static let fontTitleSuperFontWeight = "700"
    public static let fontTitleSuperLetterSpacing = "-2"
    public static let fontTitleSuperLineHeight = "100"
    public static let fontTitleSuperParagraphIndent = "0"
    public static let fontTitleSuperParagraphSpacing = "0"
    public static let fontTitleSuperTextCase = "uppercase"
    public static let fontTitleSuperTextDecoration = "none"
    public static let fontTitleUltraFontFamily = "Roboto"
    public static let fontTitleUltraFontSize = "180"
    public static let fontTitleUltraFontStretch = "normal"
    public static let fontTitleUltraFontStyle = "normal"
    public static let fontTitleUltraFontStyleOld = "Bold"
    public static let fontTitleUltraFontWeight = "700"
    public static let fontTitleUltraLetterSpacing = "-2"
    public static let fontTitleUltraLineHeight = "100"
    public static let fontTitleUltraParagraphIndent = "0"
    public static let fontTitleUltraParagraphSpacing = "0"
    public static let fontTitleUltraTextCase = "uppercase"
    public static let fontTitleUltraTextDecoration = "none"
    public static let gridLg992pxAlignment = stretch
    public static let gridLg992pxCount = 12
    public static let gridLg992pxGutterSize = 16
    public static let gridLg992pxOffset = 48
    public static let gridLg992pxPattern = columns
    public static let gridMd576pxAlignment = stretch
    public static let gridMd576pxCount = 12
    public static let gridMd576pxGutterSize = 16
    public static let gridMd576pxOffset = 46
    public static let gridMd576pxPattern = columns
    public static let gridXl1200pxAlignment = stretch
    public static let gridXl1200pxCount = 12
    public static let gridXl1200pxGutterSize = 24
    public static let gridXl1200pxOffset = 104
    public static let gridXl1200pxPattern = columns
    public static let gridXm375pxAlignment = stretch
    public static let gridXm375pxCount = 8
    public static let gridXm375pxGutterSize = 8
    public static let gridXm375pxOffset = 16
    public static let gridXm375pxPattern = columns
    public static let gridXsm320pxAlignment = stretch
    public static let gridXsm320pxCount = 8
    public static let gridXsm320pxGutterSize = 8
    public static let gridXsm320pxOffset = 16
    public static let gridXsm320pxPattern = columns
}
